version: '2'

services:

### Applications Code Container #############################

    applications:
      image: tianon/true
      tty: true
      volumes:
        - ${APPLICATION}:/var/www

### Workspace Utilities Container ###########################

    workspace:
      build:
        context: ./workspace
        args:
          - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
          - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
          - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
          - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
          - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
          - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
          - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
          - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
          - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
          - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
          - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
          - PUID=${WORKSPACE_PUID}
          - PGID=${WORKSPACE_PGID}
          - NODE_VERSION=${WORKSPACE_NODE_VERSION}
          - TZ=${WORKSPACE_TIMEZONE}
        dockerfile: "Dockerfile-${PHP_VERSION}"
      volumes_from:
        - applications
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      ports:
        - "${WORKSPACE_SSH_PORT}:22"
      tty: true
      networks:
        - frontend
        - backend

### PHP-FPM Container #######################################

    php-fpm:
      build:
        context: ./php-fpm
        args:
          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
          - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
          - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
          - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
          - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
          - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
          - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
          - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
          - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
          - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        dockerfile: "Dockerfile-${PHP_VERSION}"
      volumes_from:
        - applications
      volumes:
        - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      expose:
        - "9000"
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      networks:
        - backend

### NGINX Server Container ##################################

    nginx:
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
      volumes_from:
        - applications
      volumes:
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### MySQL Container #########################################

    mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend

### MongoDB Container #######################################
#
#    mongo:
#      build: ./mongo
#      ports:
#        - "${MONGODB_PORT}:27017"
#      volumes:
#        - ${DATA_SAVE_PATH}/mongo:/data/db
#      networks:
#        - backend

### Redis Container #########################################
#
#    redis:
#      build: ./redis
#      volumes:
#        - ${DATA_SAVE_PATH}/redis:/data
#      ports:
#        - "${REDIS_PORT}:6379"
#      networks:
#        - backend

#### Memcached Container #####################################
#
#    memcached:
#      build: ./memcached
#      volumes:
#        - ${DATA_SAVE_PATH}/memcached:/var/lib/memcached
#      ports:
#        - "${MEMCACHED_HOST_PORT}:11211"
#      depends_on:
#        - php-fpm
#      networks:
#        - backend

#### RabbitMQ Container ######################################
#
#    rabbitmq:
#      build: ./rabbitmq
#      ports:
#        - "${RABBITMQ_NODE_HOST_PORT}:5672"
#        - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
#        - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
#      privileged: true
#      environment:
#        - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
#        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
#      depends_on:
#        - php-fpm
#      networks:
#        - backend

### phpMyAdmin Container ####################################

    phpmyadmin:
      build: ./phpmyadmin
      environment:
        - PMA_ARBITRARY=1
        - MYSQL_HOST=${PMA_HOST}
        - MYSQL_USER=${PMA_USER}
        - MYSQL_PASSWORD=${PMA_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      ports:
        - "${PMA_PORT}:80"
      depends_on:
        - "${PMA_DB_ENGINE}"
      networks:
        - frontend
        - backend

#### ElasticSearch Container #################################
#
#    elasticsearch:
#      build: ./elasticsearch
#      volumes:
#        - elasticsearch-data:/usr/share/elasticsearch/data
#        - elasticsearch-plugins:/usr/share/elasticsearch/plugins
#      environment:
#        - cluster.name=laradock-cluster
#        - bootstrap.memory_lock=true
#        - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#      ulimits:
#        memlock:
#          soft: -1
#          hard: -1
#      mem_limit: 512m
#      ports:
#        - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
#        - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
#      depends_on:
#        - php-fpm
#      networks:
#        - frontend
#        - backend

### MailDev Container #######################################

    maildev:
      build: ./maildev
      ports:
        - "${MAILDEV_HTTP_PORT}:80"
        - "${MAILDEV_SMTP_PORT}:25"
      networks:
        - frontend
        - backend

#### Varnish Proxy 1 ##########################################
#
#    proxy:
#      build: ./varnish
#      expose:
#        - ${VARNISH_PORT}
#      environment:
#        - VARNISH_CONFIG=${VARNISH_CONFIG}
#        - CACHE_SIZE=${VARNISH_PROXY1_CACHE_SIZE}
#        - VARNISHD_PARAMS=${VARNISHD_PARAMS}
#        - VARNISH_PORT=${VARNISH_PORT}
#        - BACKEND_HOST=${VARNISH_PROXY1_BACKEND_HOST}
#        - BACKEND_PORT=${VARNISH_BACKEND_PORT}
#        - VARNISH_SERVER=${VARNISH_PROXY1_SERVER}
#      links:
#        - workspace
#      networks:
#        - frontend

#### Varnish Proxy 2 ##########################################
#
#    proxy2:
#      build: ./varnish
#      expose:
#        - ${VARNISH_PORT}
#      environment:
#        - VARNISH_CONFIG=${VARNISH_CONFIG}
#        - CACHE_SIZE=${VARNISH_PROXY2_CACHE_SIZE}
#        - VARNISHD_PARAMS=${VARNISHD_PARAMS}
#        - VARNISH_PORT=${VARNISH_PORT}
#        - BACKEND_HOST=${VARNISH_PROXY2_BACKEND_HOST}
#        - BACKEND_PORT=${VARNISH_BACKEND_PORT}
#        - VARNISH_SERVER=${VARNISH_PROXY2_SERVER}
#      links:
#        - workspace
#      networks:
#        - frontend

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  mysql:
    driver: "local"
  memcached:
    driver: "local"
  redis:
    driver: "local"
  mongo:
    driver: "local"
  phpmyadmin:
    driver: "local"
#  elasticsearch-data:
#    driver: "local"
#  elasticsearch-plugins:
#    driver: "local"
